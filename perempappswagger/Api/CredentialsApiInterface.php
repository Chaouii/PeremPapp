<?php
/**
 * CredentialsApiInterface
 * PHP version 5
 *
 * @category Class
 * @package  Swagger\Server
 * @author   Swagger Codegen team
 * @link     https://github.com/swagger-api/swagger-codegen
 */

/**
 * Products API
 *
 * This is Product API for product data management
 *
 * OpenAPI spec version: 1.0.0
 * 
 * Generated by: https://github.com/swagger-api/swagger-codegen.git
 *
 */

/**
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen
 * Do not edit the class manually.
 */

namespace Swagger\Server\Api;

use Symfony\Component\HttpFoundation\File\UploadedFile;
use Swagger\Server\Model\ApplicationError;
use Swagger\Server\Model\Credential;
use Swagger\Server\Model\CredentialPass;
use Swagger\Server\Model\CredentialPost;

/**
 * CredentialsApiInterface Interface Doc Comment
 *
 * @category Interface
 * @package  Swagger\Server\Api
 * @author   Swagger Codegen team
 * @link     https://github.com/swagger-api/swagger-codegen
 */
interface CredentialsApiInterface
{

    /**
     * Operation createCredential
     *
     * Create new User and insert it in User collection
     *
     * @param  Swagger\Server\Model\CredentialPost $credentials  All necessary informations required to create a new user (required)
     * @param  integer $responseCode     The HTTP response code to return
     * @param  array   $responseHeaders  Additional HTTP headers to return with the response ()
     *
     * @return Swagger\Server\Model\CredentialPost[]
     *
     */
    public function createCredential(CredentialPost $credentials, &$responseCode, array &$responseHeaders);

    /**
     * Operation resetPassword
     *
     * get the user account
     *
     * @param  string $mail  userMail (required)
     * @param  integer $responseCode     The HTTP response code to return
     * @param  array   $responseHeaders  Additional HTTP headers to return with the response ()
     *
     * @return Swagger\Server\Model\CredentialPass[]
     *
     */
    public function resetPassword($mail, &$responseCode, array &$responseHeaders);

    /**
     * Operation userLogin
     *
     * get the user account
     *
     * @param  string $mail  userMail (required)
     * @param  integer $responseCode     The HTTP response code to return
     * @param  array   $responseHeaders  Additional HTTP headers to return with the response ()
     *
     * @return Swagger\Server\Model\Credential[]
     *
     */
    public function userLogin($mail, &$responseCode, array &$responseHeaders);
}
