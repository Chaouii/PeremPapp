<?php
/**
 * CredentialPost
 *
 * PHP version 5
 *
 * @category Class
 * @package  Swagger\Server\Model
 * @author   Swagger Codegen team
 * @link     https://github.com/swagger-api/swagger-codegen
 */

/**
 * Products API
 *
 * This is Product API for product data management
 *
 * OpenAPI spec version: 1.0.0
 * 
 * Generated by: https://github.com/swagger-api/swagger-codegen.git
 *
 */

/**
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen
 * Do not edit the class manually.
 */

namespace Swagger\Server\Model;

use Symfony\Component\Validator\Constraints as Assert;
use JMS\Serializer\Annotation\Type;
use JMS\Serializer\Annotation\SerializedName;

/**
 * Class representing the CredentialPost model.
 *
 * @package Swagger\Server\Model
 * @author  Swagger Codegen team
 */
class CredentialPost 
{
        /**
     * @var string|null
     * @SerializedName("fname")
     * @Assert\Type("string")
     * @Type("string")
     */
    protected $fname;

    /**
     * @var string|null
     * @SerializedName("lname")
     * @Assert\Type("string")
     * @Type("string")
     */
    protected $lname;

    /**
     * @var string|null
     * @SerializedName("mail")
     * @Assert\Type("string")
     * @Type("string")
     */
    protected $mail;

    /**
     * @var string|null
     * @SerializedName("bdate")
     * @Assert\Type("string")
     * @Type("string")
     */
    protected $bdate;

    /**
     * @var string|null
     * @SerializedName("password")
     * @Assert\Type("string")
     * @Type("string")
     */
    protected $password;

    /**
     * Constructor
     * @param mixed[] $data Associated array of property values initializing the model
     */
    public function __construct(array $data = null)
    {
        $this->fname = isset($data['fname']) ? $data['fname'] : null;
        $this->lname = isset($data['lname']) ? $data['lname'] : null;
        $this->mail = isset($data['mail']) ? $data['mail'] : null;
        $this->bdate = isset($data['bdate']) ? $data['bdate'] : null;
        $this->password = isset($data['password']) ? $data['password'] : null;
    }

    /**
     * Gets fname.
     *
     * @return string|null
     */
    public function getFname()
    {
        return $this->fname;
    }

    /**
     * Sets fname.
     *
     * @param string|null $fname
     *
     * @return $this
     */
    public function setFname($fname = null)
    {
        $this->fname = $fname;

        return $this;
    }

    /**
     * Gets lname.
     *
     * @return string|null
     */
    public function getLname()
    {
        return $this->lname;
    }

    /**
     * Sets lname.
     *
     * @param string|null $lname
     *
     * @return $this
     */
    public function setLname($lname = null)
    {
        $this->lname = $lname;

        return $this;
    }

    /**
     * Gets mail.
     *
     * @return string|null
     */
    public function getMail()
    {
        return $this->mail;
    }

    /**
     * Sets mail.
     *
     * @param string|null $mail
     *
     * @return $this
     */
    public function setMail($mail = null)
    {
        $this->mail = $mail;

        return $this;
    }

    /**
     * Gets bdate.
     *
     * @return string|null
     */
    public function getBdate()
    {
        return $this->bdate;
    }

    /**
     * Sets bdate.
     *
     * @param string|null $bdate
     *
     * @return $this
     */
    public function setBdate($bdate = null)
    {
        $this->bdate = $bdate;

        return $this;
    }

    /**
     * Gets password.
     *
     * @return string|null
     */
    public function getPassword()
    {
        return $this->password;
    }

    /**
     * Sets password.
     *
     * @param string|null $password
     *
     * @return $this
     */
    public function setPassword($password = null)
    {
        $this->password = $password;

        return $this;
    }
}


